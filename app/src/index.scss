$bg-colors: (#710005, #180000);
$btn-colors: (#F3AC3C, #F5682A);
$light-color: #FFFCF3;
$btn-size: 75px;
$btn-margin: $btn-size / 3;
$board-height: $btn-size * 3 + $btn-margin * 6;
$btn-size-mob: 50px;
$btn-margin-mob: $btn-size-mob / 3;
$board-height-mob: $btn-size-mob * 3 + $btn-margin-mob * 6;

%pseudo-shape {
  content: '';
  display: block;
  position: absolute;    
}

@mixin radial-gradient($position, $color-list) {
  background: nth($color-list, 1); /* For browsers that do not support gradients */
  background: -webkit-radial-gradient($position, $color-list...); /* Safari 5.1 to 6.0 */
  background: -o-radial-gradient($position, $color-list...); /* For Opera 11.6 to 12.0 */
  background: -moz-radial-gradient($position, $color-list...); /* For Firefox 3.6 to 15 */
  background: radial-gradient($position, $color-list...); /* Standard syntax */
  background-size: cover;
  background-repeat: no-repeat;
}

@mixin linear-gradient($deg, $color-list) {
  background: nth($color-list, 1); /* For browsers that do not support gradients */
  background: -webkit-linear-gradient($deg, $color-list...); /* For Safari 5.1 to 6.0 */
  background: -o-linear-gradient($deg, $color-list...); /* For Opera 11.1 to 12.0 */
  background: -moz-linear-gradient($deg, $color-list...); /* For Firefox 3.6 to 15 */
  background: linear-gradient($deg, $color-list...); /* Standard syntax */
  background-size: cover;
  background-repeat: no-repeat;
}

html, body {
  min-height: 100%;
  height: 100%;
}
  
body {
  @include radial-gradient(center, $bg-colors);
  background-attachment: fixed;
  overflow: scroll;
  font-size: 12px;
  color: $light-color;
  position: relative;
  margin: 0;
  padding-top: 70px;
}

#main-menu {
  height: 50px;
  background-color: rgba(0,0,0,0.5);
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 1;
  font-family: helvetica;
  line-height: 50px;
  vertical-align: middle;
  button {
    border-radius: 50%;
    display: inline-block;
    width: 30px;
    height: 30px;
    margin-left: 10px;
    border: none;
    background-color: #710005;
    color: yellow;
  }
  h2 {
    display: inline-block;
    margin: 0 10px 0 0;
    float: right;
  }
}

h1 {
  margin: 0 0 0 10px;
  display: inline-block;
}

#messages {
  display: none;
}

#ttt-app{
  display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	-ms-flex-align: center;
	-webkit-align-items: center;
	-webkit-box-align: center;
	align-items: center;
  height: 100%;
}

#board {
  box-shadow: 0 0 100px 10px #F3AC3C;
  box-sizing: border-box;  
  @include linear-gradient(90deg, $btn-colors);
  border-radius: 50%;
  position: relative;
  z-index: 0;
  opacity: 0.99;
  width: $board-height;
  height: $board-height;
  margin: auto;
  button {
    float: left;
    height: $btn-size;
    width: $btn-size;
    display: block;
    border: none;
    color: nth($btn-colors, 1);
    border-radius: 50%;
    margin: $btn-margin;
    font-size: 3em;
    font-weight: bold;
    font-family: helvetica;
    background-color: transparent;  
    @include radial-gradient(center, $bg-colors);
    background-attachment: fixed;
    &.marker-o:after {
      content: 'O';
    }
    &.marker-x:after {
      content: 'X';
    }
    &:hover {
      cursor: pointer;
    }
    &:before {
      position: absolute;
      pointer-events: none;
      border-radius: 50%;
      z-index: -1;
      left: 0;
      right: 0;
      margin: auto;
      top: 0;
      bottom: 0;
      @extend %pseudo-shape;
    }
    @for $i from 1 through 9 {
      &:nth-child(#{$i}){
        // Would love to separate this out later, for readability.
        // The math assigns -1, 0 or 1 to a shadow's x/y positions, 
        // based on button index, then multiplies by 10 px
        box-shadow: inset ((($i + 2) % 3 - 1) * 10px) ((($i - 1 + (3 - (($i - 1) % 3))) / 3 - 2) * 10px) 10px rgba(243, 172, 60,0.4);
        &:hover {
          box-shadow: inset ((($i + 2) % 3 - 1) * 10px) ((($i - 1 + (3 - (($i - 1) % 3))) / 3 - 2) * 10px) 10px rgba(243, 172, 60,0.4), 0 0 10px 5px rgba(255,255,255,0.5);
        }
        &:focus {
          outline: none;
        }
      }
      &:nth-child(#{$i}):before {
        width: $board-height - $i * ($board-height / 10);
        height: $board-height - $i * ($board-height / 10);
        @include linear-gradient(90deg, (lighten(#F3AC3C, 5% * $i), lighten(#F5682A, 5% * $i)));
      }
    }
  }
}

